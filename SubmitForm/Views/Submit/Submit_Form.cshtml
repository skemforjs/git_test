@model SubmitForm.Models.TB_SUBMIT
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="submit_wrap">
@using (Html.BeginForm(null, null, FormMethod.Post, new { }))
{
    @Html.AntiForgeryToken();
    Html.EnableClientValidation();
    <ul>
        <li>
            <label>이름 </label>@Html.TextBoxFor(m => m.name, new {id= "name"})        
            @Html.ValidationMessageFor(m => m.name)    
        </li>
        <li>
            <label>전화번호 1 </label>@Html.TextBoxFor(m => m.hp1, new {id="hp1" })
            @Html.ValidationMessageFor(m => m.hp1)            
        </li>
        <li>
            <label>전화번호 2 </label>@Html.TextBoxFor(m => m.hp2, new {id="hp2"})
            @Html.ValidationMessageFor(m => m.hp2)            
        </li>
        <li>
            <label>전화번호 3 </label>@Html.TextBoxFor(m => m.hp3, new {id="hp3" })
            @Html.ValidationMessageFor(m => m.hp3)
        </li>
        <li>
            <label>우편번호</label>@Html.TextBoxFor(m => m.post_no, new {id= "post_no", @readonly= "readonly"  })
            <input type="button" onclick="DaumPostcode()" value="우편번호 찾기" class="d_btn">
            @Html.ValidationMessageFor(m => m.post_no)
        </li>
        <li>
            <label>주소 1 </label>@Html.TextBoxFor(m => m.adress1, new {id= "adress1", @readonly = "readonly " })
            @Html.ValidationMessageFor(m => m.adress1)
        </li>
        <li>
            <label>주소 2 </label>@Html.TextBoxFor(m => m.adress2, new { id = "adress2" })
            @Html.ValidationMessageFor(m => m.adress2)
        </li>
        <li>
            <label>생일 </label>@Html.TextBoxFor(m => m.birth_dt, new {id= "birth_dt" })
            @Html.ValidationMessageFor(m => m.birth_dt)
        </li>
        <li>
            <label>제목 </label>@Html.TextBoxFor(m => m.title, new { id = "title" })
            @Html.ValidationMessageFor(m => m.title)
        </li>
        <li>
            <label>내용 </label>@Html.TextAreaFor(m => m.contents, new { id = "contents" })
            @Html.ValidationMessageFor(m => m.contents)
        </li>
    </ul>


    <input href="/Submit/Detail?seq=@ViewBag.seq" class="btn_submit" type="submit" value="확인" />
}
</div>
<script src="http://dmaps.daum.net/map_js_init/postcode.v2.js"></script>
<script>
    //jQuery.validator.setDefaults({
    //    onkeyup: false,
    //    onclick: false,
    //    onfocusout: false,
    //    showErrors: function (errorMap, errorList) {
    //        var caption = $(errorList[0].element).attr('caption') || $(errorList[0].element).attr('name');
    //        alert(errorList[0].message);
    //    }
    //});

    
            function DaumPostcode() {
                new daum.Postcode({
                    oncomplete: function(data) {
                        // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                        // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                        // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                        var fullAddr = ''; // 최종 주소 변수
                        var extraAddr = ''; // 조합형 주소 변수

                        //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                        if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                            fullAddr = data.roadAddress;
                        } else { // 사용자가 지번 주소를 선택했을 경우(J)
                            fullAddr = data.jibunAddress;
                        }

                        // 사용자가 선택한 주소가 도로명 타입일때 조합한다.
                        if(data.userSelectedType === 'R'){
                            //법정동명이 있을 경우 추가한다.
                            if(data.bname !== ''){
                                extraAddr += data.bname;
                            }
                            // 건물명이 있을 경우 추가한다.
                            if(data.buildingName !== ''){
                                extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                            }
                            // 조합형주소의 유무에 따라 양쪽에 괄호를 추가하여 최종 주소를 만든다.
                            fullAddr += (extraAddr !== '' ? ' ('+ extraAddr +')' : '');
                        }

                        // 우편번호와 주소 정보를 해당 필드에 넣는다.
                        document.getElementById('post_no').value = data.zonecode;
                        document.getElementById("adress1").value = fullAddr;
                        // 커서를 상세주소 필드로 이동한다.
                        document.getElementById("adress2").focus();
                    }
                }).open();
            }

            //$(function () {
            //    $('.btn_submit').click(function () {
            //        $.ajax({
            //            type: "POST",
            //            url: "/Submit/Submit_Form",
            //            data: $('form').serialize(),
            //            datatype: "json",
            //            async: false,
            //            success: function (data) {                                                
            //                alert("저장되었습니다.")
            //            },
            //        });
            //    })
    //})     
            CKEDITOR.replace('contents', {                
                enterMode: '2'                    
            });
            CKEDITOR.instances.contents.getData();
            
</script>


